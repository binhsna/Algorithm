Nguyên tắc so sánh 2 chuỗi:
Ví dụ: so sánh 2 chuỗi s1, s2
-  Lấy từng kí tự của chuỗi s1 so sánh với từng kí tự của chuỗi s2 - nếu phát hiện sự khác biệt thì lập tức kết luận
+ kí tự s1 lớn hơn kí tự s2
==> chuỗi s1 lớn hơn chuỗi s2
+ kí tự s1 nhỏ hơn kí tự s2
==> chuỗi s1 nhỏ hơn chuỗi s2
- Nếu 2 kí tự s1 và s2 bằng nhau thì tiếp tục so sánh đến khi nào gặp sự khác biệt hoặc kiểm tra hết tất cả các kí tự của 2 chuỗi mà vẫn không thấy sự khác biệt thì 2 chuỗi bằng nhau
- So sánh 2 kí tự: là đang so sánh trên mã ASCII  của nó - mã ACII là 1 mã số nguyên 
a: 97
b: 98
...
z: 122

A: 65
B: 66
...
Z: 90

================================== STRCMP ================================== 
2. strcmp(s1, s2): so sánh 2 chuỗi có phân biệt kí tự hoa và kí tự thường, có giá trị trả về
+ > 0
==> s1 > s2
+ < 0
==> s1 < s2
+ == 0
==> s1 == s2

VD: 
s1 = "a";
s2 = "LAP TRINH";
==> s1 > s2

strcmp(s1, s2): tham số truyền vào là 2 chuỗi cần so sánh


=============== SOURCE CODE

#include<stdio.h>
#include<conio.h>
#include<string.h>
/*
s1 = "tam"
s2 = "tam nguyen"

Kiểm tra từng kí tự bằng cách:
Duyệt từ đầu chuỗi đến cuối chuỗi của CHUỖI CÓ ĐỘ DÀI NHỎ NHẤT
*/

// xây dựng hàm so sánh có phân biệt hoa thường
int STRCMP(char s1[], char s2[])
{
	int dodai_min = strlen(s1) < strlen(s2) ? strlen(s1) : strlen(s2);

	// vòng lặp duyệt từng kí tự để so sánh
	for(int i = 0; i < dodai_min; i++)
	{
		if(s1[i] > s2[i])
		{
			return 1; // chuỗi s1 lớn hơn chuỗi s2
		}
		else if(s1[i] < s2[i])
		{
			return -1; // chuỗi s1 nhỏ hơn chuỗi s2
		}
	}

	// nếu sau khi thoát khỏi vòng lặp for mà vẫn chưa phát hiện sự khác biệt thì kiểm tra độ dài 
	// nếu độ dài của thằng nào dài hơn thì thằng đó lớn hơn
	if(strlen(s1) > strlen(s2))
	{
		return 1;
	}
	else if(strlen(s1) < strlen(s2))
	{
		return -1;
	}

	return 0; // 2 chuỗi có độ dài như nhau
}

int main()
{
	char s[] = "TAM";
	char s1[] = "tam";

	if(STRCMP(s, s1) > 0)
	{
		printf("\nChuoi s lon hon chuoi s1");
	}
	else if(STRCMP(s, s1) < 0)
	{
		printf("\nChuoi s1 lon hon chuoi s");
	}
	else
	{
		printf("\nChuoi s1 bang chuoi s");
	}

	getch();
	return 0;
}